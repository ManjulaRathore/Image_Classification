# -*- coding: utf-8 -*-
"""Image_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aPbURg83iL8YON4RVtscGE-HLFrNZYNg
"""

from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
from keras.applications.vgg16 import preprocess_input
from keras.applications.vgg16 import decode_predictions
from keras.applications.vgg16 import VGG16

"""load an image"""

!wget https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRiOcAHJIiP-nUS0n-STp9GlyQwMzAe1ly_0MYgRnxNhbYNjFo1-w

image = load_img('images?q=tbn:ANd9GcRiOcAHJIiP-nUS0n-STp9GlyQwMzAe1ly_0MYgRnxNhbYNjFo1-w', target_size=(224,224))
image = img_to_array(image)
image = image.reshape((1, image.shape[0], image.shape[1], image.shape[2]))

import cv2
import numpy as np
from matplotlib import pyplot as plt

img = cv2.imread("images?q=tbn:ANd9GcRiOcAHJIiP-nUS0n-STp9GlyQwMzAe1ly_0MYgRnxNhbYNjFo1-w")
img_cvt=cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.imshow(img_cvt)
plt.show()

"""prepare image for the pretrained model"""

image = preprocess_input(image)

"""load the model"""

model = VGG16()

"""predict the probability"""

yhat = model.predict(image)

"""converting probability to class"""

label = decode_predictions(yhat)

"""retrive the highest probability"""

label = label[0][0]

print('%s (%.2f%%)' % (label[1], label[2]*100))